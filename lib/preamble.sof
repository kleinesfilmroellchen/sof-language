# Standard library preamble. This file is subject to the SOF language project copyright.

{ } id dexport
{ pop return } 2 function const dexport

{ "klfr.sof.lib.Builtins#convertInt(Stackable)" nativecall return } 1 function convert:int globaldef

{ "klfr.sof.lib.Builtins#convertFloat(Stackable)" nativecall return } 1 function convert:decimal globaldef

{ "klfr.sof.lib.Builtins#convertCallable(Stackable)" nativecall return } 1 function convert:callable globaldef

{ "klfr.sof.lib.Builtins#convertString(Stackable)" nativecall return } 1 function convert:string globaldef

{ "klfr.sof.lib.Builtins#random01()" nativecall return } 0 function random:01 globaldef

{ "klfr.sof.lib.Builtins#random(IntPrimitive,IntPrimitive)" nativecall return } 2 function random:int globaldef

{ "klfr.sof.lib.Builtins#random(FloatPrimitive,FloatPrimitive)" nativecall return } 2 function random:decimal globaldef

{ "klfr.sof.lib.Formatting#fmt(StringPrimitive)" nativecall return } 1 function fmt'0 globaldef
{ "klfr.sof.lib.Formatting#fmt(StringPrimitive,Stackable)" nativecall return } 2 function fmt'1 globaldef
{ "klfr.sof.lib.Formatting#fmt(StringPrimitive,Stackable,Stackable)" nativecall return } 3 function fmt'2 globaldef
{ "klfr.sof.lib.Formatting#fmt(StringPrimitive,Stackable,Stackable,Stackable)" nativecall return } 4 function fmt'3 globaldef
{ "klfr.sof.lib.Formatting#fmt(StringPrimitive,Stackable,Stackable,Stackable,Stackable)" nativecall return } 5 function fmt'4 globaldef
{ "klfr.sof.lib.Formatting#fmt(StringPrimitive,Stackable,Stackable,Stackable,Stackable,Stackable)" nativecall return } 6 function fmt'5 globaldef
{ "klfr.sof.lib.Formatting#fmt(StringPrimitive,Stackable,Stackable,Stackable,Stackable,Stackable,Stackable)" nativecall return } 7 function fmt'6 globaldef
{ "klfr.sof.lib.Formatting#fmt(StringPrimitive,Stackable,Stackable,Stackable,Stackable,Stackable,Stackable,Stackable)" nativecall return } 8 function fmt'7 globaldef
{ "klfr.sof.lib.Formatting#fmt(StringPrimitive,Stackable,Stackable,Stackable,Stackable,Stackable,Stackable,Stackable,Stackable)" nativecall return } 9 function fmt'8 globaldef


# The SOF programming language interpreter.
# Copyright (C) 2019-2020  kleinesfilmr√∂llchen

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
