plugins {
	id 'java'
	id 'application'
	id 'jacoco'
}

repositories {
	mavenCentral()
}

dependencies {
	// Use JUnit Jupiter API for testing.
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-nop
	implementation 'org.slf4j:slf4j-nop:1.7.36'

	// Use JUnit Jupiter Engine for testing.
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

	implementation 'org.reflections:reflections:0.10.2'
}

version = '0.1'

java {
	modularity.inferModulePath = true
	toolchain.languageVersion = JavaLanguageVersion.of(24)
}

compileJava {
	options.encoding = 'UTF-8'
	options.fork = true
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}
tasks.named('javadoc') {
	options.encoding = "UTF-8"
}

sourceSets {
	main {
		java {
			srcDirs = ['src']
		}
		resources {
			srcDirs = ['src']
		}
		output.resourcesDir = file('build/out/bin')
		java.destinationDirectory.set(file('build/out/bin'))
	}

	test {
		java {
			srcDirs = ['test']
		}
		resources {
			srcDirs = ['test']
		}
		output.resourcesDir = file('build/out/testbins')
		java.destinationDirectory.set(file('build/out/testbins'))
	}
}

// Copy library into the run directories.
task copyForRun(type: Copy) {
	from 'lib'
	into 'build/libs/lib'
}
tasks.run {
	dependsOn copyForRun
}

task copyForInstall(type: Copy) {
	from 'lib'
	into 'build/install/sof-language/lib/lib'
	configure {
		mustRunAfter installDist
	}
}

task install {
	dependsOn copyForInstall, installDist
}

application {
	mainModule = 'sof'
	mainClass = 'klfr.sof.cli.CLI'

	applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]
}

tasks.run {
	standardInput = System.in
}

tasks.named('test') {
	// Use junit platform for unit tests.
	useJUnitPlatform()
	
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacoco {
    toolVersion = "0.8.13"
    reportsDirectory = layout.buildDirectory.dir('jcc-report')
}
jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
	}
}

task coverage {
	dependsOn jacocoTestReport
	dependsOn test
}
